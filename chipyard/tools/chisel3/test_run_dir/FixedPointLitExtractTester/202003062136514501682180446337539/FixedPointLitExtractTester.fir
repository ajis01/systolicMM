;buildInfoPackage: chisel3, version: 3.2.0, scalaVersion: 2.12.10, sbtVersion: 1.2.8
circuit FixedPointLitExtractTester : 
  module FixedPointLitExtractTester : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    node _T = eq(UInt<1>("h00"), UInt<1>("h00")) @[FixedPointSpec.scala 120:27]
    node _T_1 = bits(reset, 0, 0) @[FixedPointSpec.scala 120:9]
    node _T_2 = or(_T, _T_1) @[FixedPointSpec.scala 120:9]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[FixedPointSpec.scala 120:9]
    when _T_3 : @[FixedPointSpec.scala 120:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:120 assert(-4.75.F(2.BP)(1) === false.B)\n") @[FixedPointSpec.scala 120:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 120:9]
      skip @[FixedPointSpec.scala 120:9]
    node _T_4 = eq(UInt<1>("h01"), UInt<1>("h01")) @[FixedPointSpec.scala 121:27]
    node _T_5 = bits(reset, 0, 0) @[FixedPointSpec.scala 121:9]
    node _T_6 = or(_T_4, _T_5) @[FixedPointSpec.scala 121:9]
    node _T_7 = eq(_T_6, UInt<1>("h00")) @[FixedPointSpec.scala 121:9]
    when _T_7 : @[FixedPointSpec.scala 121:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:121 assert(-4.75.F(2.BP)(2) === true.B)\n") @[FixedPointSpec.scala 121:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 121:9]
      skip @[FixedPointSpec.scala 121:9]
    node _T_8 = eq(UInt<1>("h01"), UInt<1>("h01")) @[FixedPointSpec.scala 122:29]
    node _T_9 = bits(reset, 0, 0) @[FixedPointSpec.scala 122:9]
    node _T_10 = or(_T_8, _T_9) @[FixedPointSpec.scala 122:9]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[FixedPointSpec.scala 122:9]
    when _T_11 : @[FixedPointSpec.scala 122:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:122 assert(-4.75.F(2.BP)(100) === true.B)\n") @[FixedPointSpec.scala 122:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 122:9]
      skip @[FixedPointSpec.scala 122:9]
    node _T_12 = eq(UInt<4>("h0d"), UInt<4>("h0d")) @[FixedPointSpec.scala 123:30]
    node _T_13 = bits(reset, 0, 0) @[FixedPointSpec.scala 123:9]
    node _T_14 = or(_T_12, _T_13) @[FixedPointSpec.scala 123:9]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[FixedPointSpec.scala 123:9]
    when _T_15 : @[FixedPointSpec.scala 123:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:123 assert(-4.75.F(2.BP)(3, 0) === \"b1101\".U)\n") @[FixedPointSpec.scala 123:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 123:9]
      skip @[FixedPointSpec.scala 123:9]
    node _T_16 = eq(UInt<10>("h03ed"), UInt<10>("h03ed")) @[FixedPointSpec.scala 124:30]
    node _T_17 = bits(reset, 0, 0) @[FixedPointSpec.scala 124:9]
    node _T_18 = or(_T_16, _T_17) @[FixedPointSpec.scala 124:9]
    node _T_19 = eq(_T_18, UInt<1>("h00")) @[FixedPointSpec.scala 124:9]
    when _T_19 : @[FixedPointSpec.scala 124:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:124 assert(-4.75.F(2.BP)(9, 0) === \"b1111101101\".U)\n") @[FixedPointSpec.scala 124:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 124:9]
      skip @[FixedPointSpec.scala 124:9]
    node _T_20 = eq(UInt<1>("h00"), UInt<1>("h00")) @[FixedPointSpec.scala 126:32]
    node _T_21 = bits(reset, 0, 0) @[FixedPointSpec.scala 126:9]
    node _T_22 = or(_T_20, _T_21) @[FixedPointSpec.scala 126:9]
    node _T_23 = eq(_T_22, UInt<1>("h00")) @[FixedPointSpec.scala 126:9]
    when _T_23 : @[FixedPointSpec.scala 126:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:126 assert(-4.75.F(6.W, 2.BP)(1) === false.B)\n") @[FixedPointSpec.scala 126:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 126:9]
      skip @[FixedPointSpec.scala 126:9]
    node _T_24 = eq(UInt<1>("h01"), UInt<1>("h01")) @[FixedPointSpec.scala 127:32]
    node _T_25 = bits(reset, 0, 0) @[FixedPointSpec.scala 127:9]
    node _T_26 = or(_T_24, _T_25) @[FixedPointSpec.scala 127:9]
    node _T_27 = eq(_T_26, UInt<1>("h00")) @[FixedPointSpec.scala 127:9]
    when _T_27 : @[FixedPointSpec.scala 127:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:127 assert(-4.75.F(6.W, 2.BP)(2) === true.B)\n") @[FixedPointSpec.scala 127:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 127:9]
      skip @[FixedPointSpec.scala 127:9]
    node _T_28 = eq(UInt<1>("h01"), UInt<1>("h01")) @[FixedPointSpec.scala 128:34]
    node _T_29 = bits(reset, 0, 0) @[FixedPointSpec.scala 128:9]
    node _T_30 = or(_T_28, _T_29) @[FixedPointSpec.scala 128:9]
    node _T_31 = eq(_T_30, UInt<1>("h00")) @[FixedPointSpec.scala 128:9]
    when _T_31 : @[FixedPointSpec.scala 128:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:128 assert(-4.75.F(6.W, 2.BP)(100) === true.B)\n") @[FixedPointSpec.scala 128:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 128:9]
      skip @[FixedPointSpec.scala 128:9]
    node _T_32 = eq(UInt<4>("h0d"), UInt<4>("h0d")) @[FixedPointSpec.scala 129:35]
    node _T_33 = bits(reset, 0, 0) @[FixedPointSpec.scala 129:9]
    node _T_34 = or(_T_32, _T_33) @[FixedPointSpec.scala 129:9]
    node _T_35 = eq(_T_34, UInt<1>("h00")) @[FixedPointSpec.scala 129:9]
    when _T_35 : @[FixedPointSpec.scala 129:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:129 assert(-4.75.F(6.W, 2.BP)(3, 0) === \"b1101\".U)\n") @[FixedPointSpec.scala 129:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 129:9]
      skip @[FixedPointSpec.scala 129:9]
    node _T_36 = eq(UInt<10>("h03ed"), UInt<10>("h03ed")) @[FixedPointSpec.scala 130:35]
    node _T_37 = bits(reset, 0, 0) @[FixedPointSpec.scala 130:9]
    node _T_38 = or(_T_36, _T_37) @[FixedPointSpec.scala 130:9]
    node _T_39 = eq(_T_38, UInt<1>("h00")) @[FixedPointSpec.scala 130:9]
    when _T_39 : @[FixedPointSpec.scala 130:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at FixedPointSpec.scala:130 assert(-4.75.F(6.W, 2.BP)(9, 0) === \"b1111101101\".U)\n") @[FixedPointSpec.scala 130:9]
      stop(clock, UInt<1>(1), 1) @[FixedPointSpec.scala 130:9]
      skip @[FixedPointSpec.scala 130:9]
    node _T_40 = bits(reset, 0, 0) @[FixedPointSpec.scala 131:7]
    node _T_41 = eq(_T_40, UInt<1>("h00")) @[FixedPointSpec.scala 131:7]
    when _T_41 : @[FixedPointSpec.scala 131:7]
      stop(clock, UInt<1>(1), 0) @[FixedPointSpec.scala 131:7]
      skip @[FixedPointSpec.scala 131:7]
    
