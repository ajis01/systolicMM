;buildInfoPackage: chisel3, version: 3.2.0, scalaVersion: 2.12.10, sbtVersion: 1.2.8
circuit FixedPointOneHotTester : 
  module FixedPointOneHotTester : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    wire out : Fixed<8><<4>> @[OneHotMuxSpec.scala 85:17]
    wire _T : Fixed<8><<3>> @[Mux.scala 27:72]
    wire _T_1 : Fixed<8><<3>> @[Mux.scala 27:72]
    wire _T_2 : Fixed<8><<3>> @[Mux.scala 27:72]
    wire _T_3 : Fixed<8><<3>> @[Mux.scala 27:72]
    _T <= asFixedPoint(UInt<3>("h05"), 1) @[Mux.scala 27:72]
    _T_1 <= asFixedPoint(UInt<5>("h017"), 2) @[Mux.scala 27:72]
    _T_2 <= asFixedPoint(UInt<7>("h05f"), 3) @[Mux.scala 27:72]
    _T_3 <= asFixedPoint(UInt<8>("h0a3"), 3) @[Mux.scala 27:72]
    node _T_4 = asUInt(_T) @[Mux.scala 27:72]
    node _T_5 = mux(UInt<1>("h00"), _T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_6 = asUInt(_T_1) @[Mux.scala 27:72]
    node _T_7 = mux(UInt<1>("h01"), _T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_8 = asUInt(_T_2) @[Mux.scala 27:72]
    node _T_9 = mux(UInt<1>("h00"), _T_8, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_10 = asUInt(_T_3) @[Mux.scala 27:72]
    node _T_11 = mux(UInt<1>("h00"), _T_10, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_12 = or(_T_5, _T_7) @[Mux.scala 27:72]
    node _T_13 = or(_T_12, _T_9) @[Mux.scala 27:72]
    node _T_14 = or(_T_13, _T_11) @[Mux.scala 27:72]
    wire _T_15 : Fixed<8><<3>> @[Mux.scala 27:72]
    node _T_16 = asFixedPoint(_T_14, 3) @[Mux.scala 27:72]
    _T_15 <= _T_16 @[Mux.scala 27:72]
    out <= _T_15 @[OneHotMuxSpec.scala 87:7]
    node _T_17 = eq(out, asFixedPoint(UInt<7>("h05c"), 4)) @[OneHotMuxSpec.scala 94:14]
    node _T_18 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 94:9]
    node _T_19 = or(_T_17, _T_18) @[OneHotMuxSpec.scala 94:9]
    node _T_20 = eq(_T_19, UInt<1>("h00")) @[OneHotMuxSpec.scala 94:9]
    when _T_20 : @[OneHotMuxSpec.scala 94:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:94 assert(out === (-2.25).F(4.BP))\n") @[OneHotMuxSpec.scala 94:9]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 94:9]
      skip @[OneHotMuxSpec.scala 94:9]
    node _T_21 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 96:7]
    node _T_22 = eq(_T_21, UInt<1>("h00")) @[OneHotMuxSpec.scala 96:7]
    when _T_22 : @[OneHotMuxSpec.scala 96:7]
      stop(clock, UInt<1>(1), 0) @[OneHotMuxSpec.scala 96:7]
      skip @[OneHotMuxSpec.scala 96:7]
    
