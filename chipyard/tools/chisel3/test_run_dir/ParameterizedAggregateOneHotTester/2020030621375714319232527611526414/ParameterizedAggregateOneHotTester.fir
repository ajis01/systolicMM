;buildInfoPackage: chisel3, version: 3.2.0, scalaVersion: 2.12.10, sbtVersion: 1.2.8
circuit ParameterizedAggregateOneHotTester : 
  module ParameterizedAggregateOneHot : 
    input clock : Clock
    input reset : Reset
    output io : {flip selectors : UInt<1>[4], out : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 140:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 143:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 140:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 143:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 140:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 143:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 140:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 143:12]
    node _T = asUInt(values_0.a.f2) @[Mux.scala 27:72]
    node _T_1 = asUInt(values_0.a.f1) @[Mux.scala 27:72]
    node _T_2 = asUInt(values_0.v[0]) @[Mux.scala 27:72]
    node _T_3 = asUInt(values_0.v[1]) @[Mux.scala 27:72]
    node _T_4 = cat(_T_1, _T) @[Mux.scala 27:72]
    node _T_5 = cat(_T_3, _T_2) @[Mux.scala 27:72]
    node _T_6 = cat(_T_5, _T_4) @[Mux.scala 27:72]
    node _T_7 = mux(io.selectors[0], _T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_8 = asUInt(values_1.a.f2) @[Mux.scala 27:72]
    node _T_9 = asUInt(values_1.a.f1) @[Mux.scala 27:72]
    node _T_10 = asUInt(values_1.v[0]) @[Mux.scala 27:72]
    node _T_11 = asUInt(values_1.v[1]) @[Mux.scala 27:72]
    node _T_12 = cat(_T_9, _T_8) @[Mux.scala 27:72]
    node _T_13 = cat(_T_11, _T_10) @[Mux.scala 27:72]
    node _T_14 = cat(_T_13, _T_12) @[Mux.scala 27:72]
    node _T_15 = mux(io.selectors[1], _T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_16 = asUInt(values_2.a.f2) @[Mux.scala 27:72]
    node _T_17 = asUInt(values_2.a.f1) @[Mux.scala 27:72]
    node _T_18 = asUInt(values_2.v[0]) @[Mux.scala 27:72]
    node _T_19 = asUInt(values_2.v[1]) @[Mux.scala 27:72]
    node _T_20 = cat(_T_17, _T_16) @[Mux.scala 27:72]
    node _T_21 = cat(_T_19, _T_18) @[Mux.scala 27:72]
    node _T_22 = cat(_T_21, _T_20) @[Mux.scala 27:72]
    node _T_23 = mux(io.selectors[2], _T_22, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_24 = asUInt(values_3.a.f2) @[Mux.scala 27:72]
    node _T_25 = asUInt(values_3.a.f1) @[Mux.scala 27:72]
    node _T_26 = asUInt(values_3.v[0]) @[Mux.scala 27:72]
    node _T_27 = asUInt(values_3.v[1]) @[Mux.scala 27:72]
    node _T_28 = cat(_T_25, _T_24) @[Mux.scala 27:72]
    node _T_29 = cat(_T_27, _T_26) @[Mux.scala 27:72]
    node _T_30 = cat(_T_29, _T_28) @[Mux.scala 27:72]
    node _T_31 = mux(io.selectors[3], _T_30, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_32 = or(_T_7, _T_15) @[Mux.scala 27:72]
    node _T_33 = or(_T_32, _T_23) @[Mux.scala 27:72]
    node _T_34 = or(_T_33, _T_31) @[Mux.scala 27:72]
    wire _T_35 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:72]
    wire _T_36 : UInt<32>
    _T_36 <= _T_34
    node _T_37 = bits(_T_36, 8, 0) @[Mux.scala 27:72]
    node _T_38 = asFixedPoint(_T_37, 5) @[Mux.scala 27:72]
    _T_35.a.f2 <= _T_38 @[Mux.scala 27:72]
    node _T_39 = bits(_T_36, 15, 9) @[Mux.scala 27:72]
    node _T_40 = asFixedPoint(_T_39, 3) @[Mux.scala 27:72]
    _T_35.a.f1 <= _T_40 @[Mux.scala 27:72]
    node _T_41 = bits(_T_36, 23, 16) @[Mux.scala 27:72]
    node _T_42 = asFixedPoint(_T_41, 4) @[Mux.scala 27:72]
    _T_35.v[0] <= _T_42 @[Mux.scala 27:72]
    node _T_43 = bits(_T_36, 31, 24) @[Mux.scala 27:72]
    node _T_44 = asFixedPoint(_T_43, 4) @[Mux.scala 27:72]
    _T_35.v[1] <= _T_44 @[Mux.scala 27:72]
    io.out.a.f2 <= _T_35.a.f2 @[OneHotMuxSpec.scala 206:10]
    io.out.a.f1 <= _T_35.a.f1 @[OneHotMuxSpec.scala 206:10]
    io.out.v[0] <= _T_35.v[0] @[OneHotMuxSpec.scala 206:10]
    io.out.v[1] <= _T_35.v[1] @[OneHotMuxSpec.scala 206:10]
    
  module ParameterizedAggregateOneHotTester : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 140:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 143:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 140:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 143:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 140:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 143:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 139:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 140:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 143:12]
    inst dut of ParameterizedAggregateOneHot @[OneHotMuxSpec.scala 172:19]
    dut.clock <= clock
    dut.reset <= reset
    dut.io.selectors[0] <= UInt<1>("h00") @[OneHotMuxSpec.scala 173:23]
    dut.io.selectors[1] <= UInt<1>("h01") @[OneHotMuxSpec.scala 174:23]
    dut.io.selectors[2] <= UInt<1>("h00") @[OneHotMuxSpec.scala 175:23]
    dut.io.selectors[3] <= UInt<1>("h00") @[OneHotMuxSpec.scala 176:23]
    node _T = asUInt(dut.io.out.a.f2) @[OneHotMuxSpec.scala 178:27]
    node _T_1 = asUInt(dut.io.out.a.f1) @[OneHotMuxSpec.scala 178:27]
    node _T_2 = asUInt(dut.io.out.v[0]) @[OneHotMuxSpec.scala 178:27]
    node _T_3 = asUInt(dut.io.out.v[1]) @[OneHotMuxSpec.scala 178:27]
    node _T_4 = cat(_T_1, _T) @[OneHotMuxSpec.scala 178:27]
    node _T_5 = cat(_T_3, _T_2) @[OneHotMuxSpec.scala 178:27]
    node _T_6 = cat(_T_5, _T_4) @[OneHotMuxSpec.scala 178:27]
    node _T_7 = asUInt(values_1.a.f2) @[OneHotMuxSpec.scala 178:50]
    node _T_8 = asUInt(values_1.a.f1) @[OneHotMuxSpec.scala 178:50]
    node _T_9 = asUInt(values_1.v[0]) @[OneHotMuxSpec.scala 178:50]
    node _T_10 = asUInt(values_1.v[1]) @[OneHotMuxSpec.scala 178:50]
    node _T_11 = cat(_T_8, _T_7) @[OneHotMuxSpec.scala 178:50]
    node _T_12 = cat(_T_10, _T_9) @[OneHotMuxSpec.scala 178:50]
    node _T_13 = cat(_T_12, _T_11) @[OneHotMuxSpec.scala 178:50]
    node _T_14 = eq(_T_6, _T_13) @[OneHotMuxSpec.scala 178:30]
    node _T_15 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 178:9]
    node _T_16 = or(_T_14, _T_15) @[OneHotMuxSpec.scala 178:9]
    node _T_17 = eq(_T_16, UInt<1>("h00")) @[OneHotMuxSpec.scala 178:9]
    when _T_17 : @[OneHotMuxSpec.scala 178:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:178 assert(dut.io.out.asUInt() === values(1).asUInt())\n") @[OneHotMuxSpec.scala 178:9]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 178:9]
      skip @[OneHotMuxSpec.scala 178:9]
    node _T_18 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 180:7]
    node _T_19 = eq(_T_18, UInt<1>("h00")) @[OneHotMuxSpec.scala 180:7]
    when _T_19 : @[OneHotMuxSpec.scala 180:7]
      stop(clock, UInt<1>(1), 0) @[OneHotMuxSpec.scala 180:7]
      skip @[OneHotMuxSpec.scala 180:7]
    
